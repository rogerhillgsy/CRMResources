table.questionnaireTable {
  max-width: 100%;
  width: 100%;
}

th.questionTableHeader {
  background-color: #555;
  color: #fff;
}

th.questionTableHeader,
td.questionTableData {
  text-align: left;
  padding: 0.5em 1em;
}

table.questionnaireTable {
  max-width: 100%;
  width: 100%;
}

thead.questionTableHeaderRow {
  width: 100%;
}

th.questionTableHeader {
  width: 33%;
}

td.questionTableData {
  width: 30%;
  vertical-align: top;
    text-align: top;
}

td.questionTableInput {
    vertical-align: top;
    text-align: top;
    width: 30%;
    padding: 0.5em 1em;
    box-sizing: content-box;
}

 /* https://css-tricks.com/the-cleanest-trick-for-autogrowing-textareas/ */

.grow-wrap {
    /* easy way to plop the elements on top of each other and have them both sized based on the tallest one's height */
    display: grid;
  }
  .grow-wrap::after {
    /* Note the weird space! Needed to preventy jumpy behavior */
    content: attr(data-replicated-value) " ";
  
    /* This is how textarea text behaves */
    white-space: pre-wrap;
  
    /* Hidden from view, clicks, and screen readers */
    visibility: hidden;
  }
  .grow-wrap > textarea {
    /* You could leave this, but after a user resizes, then it ruins the auto sizing */
    resize: none;
  
    /* Firefox shows scrollbar on growth, you can hide like this. */
    overflow: hidden;
  }
  .grow-wrap > textarea,
  .grow-wrap::after {
    /* Identical styling required!! */
    border: 1px solid black;
    padding: 0.5rem;
    font: inherit;
  
    /* Place on top of each other */
    grid-area: 1 / 1 / 2 / 2;
  }
  
  /* body {
    margin: 2rem;
    font: 1rem/1.4 system-ui, sans-serif;
  }
  
  label {
    display: block;
  } */