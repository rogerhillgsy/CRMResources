"undefined"==typeof SDK&&(SDK={__namespace:!0}),SDK.REST={_context:function(){if("undefined"!=typeof GetGlobalContext)return GetGlobalContext();if("undefined"!=typeof Xrm)return Xrm.Page.context;throw new Error("Context is not available.")},_getClientUrl:function(){var e=this._context().getClientUrl();return e},_ODataPath:function(){return this._getClientUrl()+"/XRMServices/2011/OrganizationData.svc/"},_errorHandler:function(e){if(12029==e.status)return new Error("The attempt to connect to the server failed.");if(12007==e.status)return new Error("The server name could not be resolved.");var t;try{t=JSON.parse(e.responseText).error.message.value}catch(r){t=e.responseText}return new Error("Error : "+e.status+": "+e.statusText+": "+t)},_dateReviver:function(e,t){var r;return"string"==typeof t&&(r=/Date\(([-+]?\d+)\)/.exec(t))?new Date(parseInt(t.replace("/Date(","").replace(")/",""),10)):t},_parameterCheck:function(e,t){if("undefined"==typeof e||null===e)throw new Error(t)},_stringParameterCheck:function(e,t){if("string"!=typeof e)throw new Error(t)},_callbackParameterCheck:function(e,t){if("function"!=typeof e)throw new Error(t)},createRecord:function(e,t,r,a){this._parameterCheck(e,"SDK.REST.createRecord requires the object parameter."),this._stringParameterCheck(t,"SDK.REST.createRecord requires the type parameter is a string."),this._callbackParameterCheck(r,"SDK.REST.createRecord requires the successCallback is a function."),this._callbackParameterCheck(a,"SDK.REST.createRecord requires the errorCallback is a function.");var s=new XMLHttpRequest;s.open("POST",encodeURI(this._ODataPath()+t+"Set"),!0),s.setRequestHeader("Accept","application/json"),s.setRequestHeader("Content-Type","application/json; charset=utf-8"),s.onreadystatechange=function(){4==this.readyState&&(s.onreadystatechange=null,201==this.status?r(JSON.parse(this.responseText,SDK.REST._dateReviver).d):a(SDK.REST._errorHandler(this)))},s.send(JSON.stringify(e))},retrieveRecord:function(e,t,r,a,s,i,n){this._stringParameterCheck(e,"SDK.REST.retrieveRecord requires the id parameter is a string."),this._stringParameterCheck(t,"SDK.REST.retrieveRecord requires the type parameter is a string."),null!=r&&this._stringParameterCheck(r,"SDK.REST.retrieveRecord requires the select parameter is a string."),null!=a&&this._stringParameterCheck(a,"SDK.REST.retrieveRecord requires the expand parameter is a string."),this._callbackParameterCheck(s,"SDK.REST.retrieveRecord requires the successCallback parameter is a function."),this._callbackParameterCheck(i,"SDK.REST.retrieveRecord requires the errorCallback parameter is a function.");var c="";if(null!=r||null!=a){if(c="?",null!=r){var o="$select="+r;null!=a&&(o=o+","+a),c+=o}null!=a&&(c=c+"&$expand="+a)}null==n&&(n=!0);var h=new XMLHttpRequest;h.open("GET",encodeURI(this._ODataPath()+t+"Set(guid'"+e+"')"+c),n),h.setRequestHeader("Accept","application/json"),h.setRequestHeader("Content-Type","application/json; charset=utf-8"),h.onreadystatechange=function(){4==this.readyState&&(h.onreadystatechange=null,200==this.status?s(JSON.parse(this.responseText,SDK.REST._dateReviver).d):i(SDK.REST._errorHandler(this)))},h.send()},updateRecord:function(e,t,r,a,s){this._stringParameterCheck(e,"SDK.REST.updateRecord requires the id parameter."),this._parameterCheck(t,"SDK.REST.updateRecord requires the object parameter."),this._stringParameterCheck(r,"SDK.REST.updateRecord requires the type parameter."),this._callbackParameterCheck(a,"SDK.REST.updateRecord requires the successCallback is a function."),this._callbackParameterCheck(s,"SDK.REST.updateRecord requires the errorCallback is a function.");var i=new XMLHttpRequest;i.open("POST",encodeURI(this._ODataPath()+r+"Set(guid'"+e+"')"),!0),i.setRequestHeader("Accept","application/json"),i.setRequestHeader("Content-Type","application/json; charset=utf-8"),i.setRequestHeader("X-HTTP-Method","MERGE"),i.onreadystatechange=function(){4==this.readyState&&(i.onreadystatechange=null,204==this.status||1223==this.status?a():s(SDK.REST._errorHandler(this)))},i.send(JSON.stringify(t))},deleteRecord:function(e,t,r,a){this._stringParameterCheck(e,"SDK.REST.deleteRecord requires the id parameter."),this._stringParameterCheck(t,"SDK.REST.deleteRecord requires the type parameter."),this._callbackParameterCheck(r,"SDK.REST.deleteRecord requires the successCallback is a function."),this._callbackParameterCheck(a,"SDK.REST.deleteRecord requires the errorCallback is a function.");var s=new XMLHttpRequest;s.open("POST",encodeURI(this._ODataPath()+t+"Set(guid'"+e+"')"),!0),s.setRequestHeader("Accept","application/json"),s.setRequestHeader("Content-Type","application/json; charset=utf-8"),s.setRequestHeader("X-HTTP-Method","DELETE"),s.onreadystatechange=function(){4==this.readyState&&(s.onreadystatechange=null,204==this.status||1223==this.status?r():a(SDK.REST._errorHandler(this)))},s.send()},retrieveMultipleRecords:function(e,t,r,a,s,i){this._stringParameterCheck(e,"SDK.REST.retrieveMultipleRecords requires the type parameter is a string."),null!=t&&this._stringParameterCheck(t,"SDK.REST.retrieveMultipleRecords requires the options parameter is a string."),this._callbackParameterCheck(r,"SDK.REST.retrieveMultipleRecords requires the successCallback parameter is a function."),this._callbackParameterCheck(a,"SDK.REST.retrieveMultipleRecords requires the errorCallback parameter is a function."),this._callbackParameterCheck(s,"SDK.REST.retrieveMultipleRecords requires the OnComplete parameter is a function.");var n;null!=t&&(n="?"!=t.charAt(0)?"?"+t:t),null==i&&(i=!0);var c=new XMLHttpRequest;c.open("GET",this._ODataPath()+e+"Set"+n,i),c.setRequestHeader("Accept","application/json"),c.setRequestHeader("Content-Type","application/json; charset=utf-8"),c.onreadystatechange=function(){if(4==this.readyState)if(c.onreadystatechange=null,200==this.status){var t=JSON.parse(this.responseText,SDK.REST._dateReviver).d;if(r(t.results),null!=t.__next){var i=t.__next.substring((SDK.REST._ODataPath()+e+"Set").length);SDK.REST.retrieveMultipleRecords(e,i,r,a,s)}else s()}else a(SDK.REST._errorHandler(this))},c.send()},associateRecords:function(e,t,r,a,s,i,n){this._stringParameterCheck(e,"SDK.REST.associateRecords requires the parentId parameter is a string."),this._stringParameterCheck(t,"SDK.REST.associateRecords requires the parentType parameter is a string."),this._stringParameterCheck(r,"SDK.REST.associateRecords requires the relationshipName parameter is a string."),this._stringParameterCheck(a,"SDK.REST.associateRecords requires the childId parameter is a string."),this._stringParameterCheck(s,"SDK.REST.associateRecords requires the childType parameter is a string."),this._callbackParameterCheck(i,"SDK.REST.associateRecords requires the successCallback parameter is a function."),this._callbackParameterCheck(n,"SDK.REST.associateRecords requires the errorCallback parameter is a function.");var c=new XMLHttpRequest;c.open("POST",encodeURI(this._ODataPath()+t+"Set(guid'"+e+"')/$links/"+r),!0),c.setRequestHeader("Accept","application/json"),c.setRequestHeader("Content-Type","application/json; charset=utf-8"),c.onreadystatechange=function(){4==this.readyState&&(c.onreadystatechange=null,204==this.status||1223==this.status?i():n(SDK.REST._errorHandler(this)))};var o={};o.uri=this._ODataPath()+"/"+s+"Set(guid'"+a+"')",c.send(JSON.stringify(o))},disassociateRecords:function(e,t,r,a,s,i){this._stringParameterCheck(e,"SDK.REST.disassociateRecords requires the parentId parameter is a string."),this._stringParameterCheck(t,"SDK.REST.disassociateRecords requires the parentType parameter is a string."),this._stringParameterCheck(r,"SDK.REST.disassociateRecords requires the relationshipName parameter is a string."),this._stringParameterCheck(a,"SDK.REST.disassociateRecords requires the childId parameter is a string."),this._callbackParameterCheck(s,"SDK.REST.disassociateRecords requires the successCallback parameter is a function."),this._callbackParameterCheck(i,"SDK.REST.disassociateRecords requires the errorCallback parameter is a function.");var n=new XMLHttpRequest;n.open("POST",encodeURI(this._ODataPath()+t+"Set(guid'"+e+"')/$links/"+r+"(guid'"+a+"')"),!0),n.setRequestHeader("Accept","application/json"),n.setRequestHeader("Content-Type","application/json; charset=utf-8"),n.setRequestHeader("X-HTTP-Method","DELETE"),n.onreadystatechange=function(){4==this.readyState&&(n.onreadystatechange=null,204==this.status||1223==this.status?s():i(SDK.REST._errorHandler(this)))},n.send()},__namespace:!0};